[["index.html", "Programação em R para biotecnologistas 1 Apresentação 1.1 Quem somos? 1.2 Iniciativas 1.3 Projetos de Pesquisa", " Programação em R para biotecnologistas Prof. Dr. Iuri E. P. Ferreira e Prof. Dr. Jorge L. R. Pantoja Filho. Universidade Federal de São Carlos, Campus Lagoa do Sino 5 de outubro de 2023 1 Apresentação 1.1 Quem somos? Este material foi elaborado pela equipe do Centro de Modelagem Estatística em Ciências Ambientais (Ce-MECA), da UFSCar Lagoa do Sino. Visite o nosso site! 1.2 Iniciativas Projeto Ciência de Dados na Lagoa do Sino O programa estabelece um espaço devotado à discussão e popularização da Ciência de Dados, a fim de criar uma ponte entre educandos da UFSCar e profissionais e empresas da área. Grupo de Ciência de Dados e Aplicações Tecnológicas As aplicações em Ciência dos Dados são crescentes, e o seu impacto na sociedade hoje é imensurável. Hoje, encontramos algoritmos estatísticos em produção por toda a parte: nos sites de notícias, nas redes sociais, nos carros autônomos, no marketing digital etc. Atualmente, a inteligência artificial tem impactado todas as áreas criativas, e suas diversas aplicações abrem novas possibilidades e nos causam espanto. Nos dias atuais, um volume crescente de dados é gerado, e este volume está aquém das capacidades humanas de processamento e aquisição de conhecimento. Neste contexto, há uma demanda crescente por cientistas de dados. Recentemente, na UFSCar Lagoa do Sino, um grupo multidisciplinar de pesquisadores tem se reunido frequentemente para discutir pautas relacionadas à Ciência de Dados e suas aplicações nas mais diversas áreas do conhecimento. Linhas de Pesquisa: + Aprendizado de Máquinas + Modelagem Estatística em Ciências Ambientais e Ecologia + Vieses e Processos de Tomada de Decisões Programas de Iniciação Científica e Estágios Estudos e Capacitações 1.3 Projetos de Pesquisa .scrollable-section { height: 500px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px; } Biomastats Um pacote para a elaboração de relatórios ambientais automatizados sobre o uso e a ocupação do solo no Brasil. Fontana, KO; Souza, CA; Molin, PG; Santana, MF; Ferreira, IEP. Fomento: CNPq Plataforma MBA Plataforma de simulação baseada em multi-agentes (MBA) e o controle populaciona do Java Porco (Sus scrofa) no Sudoeste Paulista Bassani, FB; Sanches, A; Ferreira, IEP et al. SIG Socioambiental Um sistema para a visualização e análise de dados socioambientais em recortes do terrotório brasileiro Bilia, G; Pantoja-Filho, JLR; Ferreira, IEP et al. Métricas da Paisagem Implementação computacional de módulos de processamento, análise e visualização de métricas de paisagens no programa Biomastats Camargo, V; Carvalho, HL; Tiezzi, RO; Ferreira, IEP et al. Fomento: CNPq Modelos Bent-cable e lhas Pequenas Aplicação de modelos segmentados com transição de fase suave para explicar o Efeito de Ilhas Pequenas a partir da existência de limiares aleatórios Santana, MF; Zocchi, SS; Leandro, RA; Martensen, AC; Ferreira, IEP Biomastats GUI Desenvolvimento e implantação da Interface Gráfica do Usuário para o programa Biomastats via aplicativos shiny Santana, MF; Ferreira, IEP Fomento: CNPq "],["origem-do-r.html", "2 Origem do R", " 2 Origem do R R é uma linguagem de programação criada por Ross Ihaka e Robert Gentleman, na universidade de Auckland, Nova Zelândia, em meados dos anos 1990. A linguagem R foi uma adaptação da linguagem S, criada por John Chambers em 1976, nos laboratórios Bell. R também denomina um programa computacional destinado a análises estatísticas e visualização de dados. O programa R é livre ( General Public License ) e possui código-fonte aberto, sendo aprimorado continuamente por uma rede global de colaboradores, a partir da R Foundation for Statistical Computing , sediada em Viena, na Áustria. A linguagem R já esteve em 8º dentre as mais populares, no entanto, hoje ela ocupa a 18º posição de acordo com The TIOBE Programming Community index (TIOBE, 2023) . "],["primeiros-passos.html", "3 Primeiros passos", " 3 Primeiros passos details > summary { font-weight: bold; margin-top: 10px; cursor: pointer; } details > p { margin-left: 20px; } details > details > summary { margin-left: 20px; } Instalação Para instalar o R, acesse a página oficial da organização _The R Project for Statistical Computing em &lt; https://cran.r-project.org/ &gt; . O usuário deverá escolher o arquivo de acordo com o seu sistema operacional. Execução de códigos O R é uma linguagem interpretada. Isso significa que partes do código podem ser executadas diretamente do interpretador (interface R), sem a necessidade de compilar todo código e montar um arquivo executável (.exe). Dessa forma, o usuário seleciona o pedaço do código que deseja executar e, de imediato, tem o resultado impresso no terminal de saída ou na janela gráfica. Se houver erro de sintaxe/interpretação, o programa exibirá um alerta no terminal de saída. Exercício Abra a interface básica do R (R-GUI) e execute o código a seguir: x &lt;- rnorm(100, 10, 15) summary(x) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -16.699 -1.040 6.049 8.264 18.227 40.962 Criando scripts Após abrir a interface R, o usuário deverá criar um script (.txt ou .R) no qual os comandos serão salvos. Para executar um bloco de comandos, o usuário deverá selecioná-lo com o cursor do mouse (deixando-o em realce) e, então, pressionar F5 ou CTRL+ENTER, a depender da interface em uso. Outra opção é executar o comando, linha a linha, até completar o bloco de comandos desejado. Exercício Abra a interface gráfica do R de preferência e crie um novo arquivo de script R. Escreva algumas linhas de códigos, com comentários. Salve o script em um novo diretório. # crie uma lista de números aleatórios normalmente distribuídos x &lt;- rnorm(100, 10, 15) # faça um resumo estatístico dos valores obtidos summary(x) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -46.740 -1.114 12.916 11.259 23.709 45.164 # desenhe um diagrama de caixas para os valores amostrados boxplot(x, main = &quot;Diagrama de Caixas&quot;, ylab = &quot;Valores amostrados&quot;) Atribuição de valores No R, os resultados podem ser obtidos a partir do uso de funções/expressões ou serem atribuídos a variáveis e gravados na memória do computador. Há diversas formas de atribuir valores a uma variável: nome &lt;- valor; valor -&gt; nome; nome = valor. Tanto -&gt; como = funcionam como comandos de atribuição. Uma vantagem do R é o fato de não ser requerida a declaração/inicialização de variáveis, tipos e tamanhos ao início do programa, como é comum em outras linguagens. R é uma linguagem case sensitive, isso significa que letras maiúsculas e minúsculas são diferenciadas no programa. Portanto, uma variável de nome x será diferente de outra com nome X. Exemplo Execute as linhas de código a seguir e observe a diferença: # Valores atribuídos a variáveis locais x&lt;-5 10-&gt;X # Diferença entre as variáveis &quot;x&quot; e &quot;X&quot; 5*x; 5*X ## [1] 25 ## [1] 50 "],["tipos-de-dados.html", "4 Tipos de dados", " 4 Tipos de dados details > summary { font-weight: bold; margin-top: 10px; cursor: pointer; } details > p { margin-left: 20px; } details > details > summary { margin-left: 20px; } Há diversos tipos de dados que podem ser armazenados na memória do computador e manipulados a partir do programa R. Os dados podem ser numéricos (reais ou inteiros), lógicos (verdadeiro ou falso), caracteres (sequências alfanuméricas), números complexos ou funções. Exemplos Dado real / ponto flutuante 1/3 ## [1] 0.3333333 Dado inteiro round(1/3) ## [1] 0 Dado lógico 1&lt;3 ## [1] TRUE Dado alfanumérico nome &lt;- &quot;Carlos Henrique&quot; Dado complexo # Complexo (5+6i) - (3-2i) ## [1] 2+8i Função parabola &lt;- function(x, a, b, c){ a*x^2 + b*x + c } parabola(x = 2, a = 1, b = 1, c = 3) ## [1] 9 O comando mode retorna o tipo do dado guardado no objeto que entra como argumento da função (entre parênteses). Exemplo mode(parabola) ## [1] &quot;function&quot; "],["operações-básicas.html", "5 Operações Básicas 5.1 Operadores matemáticos 5.2 Operadores lógicos", " 5 Operações Básicas details > summary { font-weight: bold; margin-top: 10px; cursor: pointer; } details > p { margin-left: 20px; } details > details > summary { margin-left: 20px; } 5.1 Operadores matemáticos Figure 5.1: Fonte: https://www.statmethods.net/management/operators.html 5.2 Operadores lógicos Figure 5.2: Fonte: https://www.statmethods.net/management/operators.html "],["desafio.html", "6 Desafio", " 6 Desafio details > summary { font-weight: bold; margin-top: 10px; cursor: pointer; } details > p { margin-left: 20px; } details > details > summary { margin-left: 20px; } Você consegue seguir a sequência de 11 passos sem errar? Passo 1 Pense em um número entre 10 e 19 Passo 2 Some os algarismos deste número Passo 3 Do número pensado, subtraia a soma dos algarismos Passo 4 Multiplique o resultado por dois Passo 5 Divida o resultado por três Passo 6 Subtraia duas unidades do resultado Passo 7 Correlacione com o alfabeto (1 - A, 2 - B, ) Passo 8 Escolha um país que comece por essa letra Passo 9 Selecione a quinta letra desse país Passo 10 Pense em uma cor que comece por essa letra Passo 11 Pense em um animal que comece com essa letra e tenha essa cor "],["resposta-do-desafio.html", "7 Resposta do desafio", " 7 Resposta do desafio #protectedContent { display: none; } Digite a senha para visualizar o conteúdo: Mostrar Conteúdo Fonte: https://www.imagine.art/ Ok! Mas como isso acontece? Para responder, vamos construir um pequeno programa com operações matemáticas e lógicas. Programa # Atibui o número escolhido à variável num num &lt;- 16 # Calcula a soma dos algarismos algarismos &lt;- as.numeric(strsplit(as.character(num), NULL)[[1]]) soma &lt;- sum(algarismos) # Passo 3 resultado &lt;- num - soma # Passo 4 resultado &lt;- resultado*2 # Passo 5 e 6 resultado &lt;- resultado/3 - 2 # Conferência resultado == 4 ## [1] TRUE Observe que o resultado é invariante! "],["inteligência-artificial-e-programação.html", "8 Inteligência Artificial e Programação 8.1 Avanços recentes em IA 8.2 Contribuição em Programação 8.3 Contribuição em Análise de Dados", " 8 Inteligência Artificial e Programação 8.1 Avanços recentes em IA 8.1.1 Aprendizado de Máquina e Aprendizado Profundo O desenvolvimento de técnicas avançadas de aprendizado de máquina e aprendizado profundo permitiu a criação de modelos de IA mais sofisticados e precisos, capazes de realizar tarefas complexas, como reconhecimento de imagem e processamento de linguagem natural. 8.1.2 Frameworks e Bibliotecas Frameworks como TensorFlow e PyTorch têm facilitado o desenvolvimento e a implementação de modelos de IA, proporcionando ferramentas eficientes e flexíveis para os pesquisadores e desenvolvedores. 8.2 Contribuição em Programação A IA tem auxiliado programadores através de: 8.2.1 Automação Ferramentas de IA podem automatizar tarefas repetitivas, reduzindo o tempo de desenvolvimento e diminuindo a probabilidade de erros. 8.2.2 Otimização de Código Sistemas de IA podem sugerir otimizações de código e identificar potenciais bugs e vulnerabilidades, melhorando a qualidade do software. 8.3 Contribuição em Análise de Dados 8.3.1 Análise Preditiva Modelos de aprendizado de máquina podem analisar grandes conjuntos de dados para fazer previsões precisas, auxiliando na tomada de decisões em várias indústrias. . 8.3.2 Visualização de Dados Ferramentas de IA podem ajudar a criar visualizações de dados mais intuitivas e informativas, permitindo uma melhor compreensão dos dados. "],["visualização-de-dados-1.html", "9 Visualização de dados", " 9 Visualização de dados Usar a IA para carregar e visualizar dados experimentais de um arquivo .xls usando linguagem R Prompt: Tarefa: construir um script para visualizar dados experimentais em R; Dados: os dados estão armazenados no caminho ./dados-exemplos/experimento.xlsx; Contexto: os dados são referentes a um experimento inteiramente aleatorizado com 4 tratamentos e três replicações, cuja finalidade foi observar o efeito da dosagem de essência de limão no pH final de um produto lácteo; Detalhamento: deseja-se um gráfico da resposta pH em função da variável Dose de essência de limão; Ferramentas: use o pacote ggplot2; Requisitos: Gráficos em cores para os diferentes Tratamentos, com legenda e pontos representados por asteriscos de tamanho médio. O código não deve ultrapassar 15 linhas. Resposta do GPT-4: library(ggplot2) library(readxl) # Lendo os dados dados &lt;- read_excel(&quot;./dados-exemplos/experimento.xlsx&quot;) # Criando o gráfico ggplot(dados, aes(x=Dose, y=pH, color=Tratamentos)) + geom_point(shape=8, size=3) + labs(color=&#39;Tratamento&#39;) + theme_minimal() Atividade: insira o prompt em outra ferramenta de IA (LLM) e observe o resultado "],["análise-de-regressão.html", "10 Análise de Regressão 10.1 Ajuste da reta", " 10 Análise de Regressão Observe que os tratamentos do experimento podem ser analisados de forma qualitativa ou quantitativa. Na análise quantitativa, por exemplo, desejamos ajustar uma curva de tendência e fazer previsões para novos valores da resposta. 10.1 Ajuste da reta 10.1.1 Ajuste do modelo linear no R A função lm é usada para ajustar modelos estatisticamente lineares (lm = linear model). Na sintaxe do R, a fórmula pH ~ Dose representa o ajuste de uma reta de tendência, expressa por \\[ pH = \\beta_0 + \\beta_1 \\times Dose \\] mod_reta &lt;- lm( pH ~ Dose, data = dados ) coef( mod_reta ) ## (Intercept) Dose ## 7.4666667 -0.1416667 Para ajustar a reta de tendência, torna-se necessário calcular os valores mais plausíveis para os parâmetros \\(\\beta_0\\) e \\(\\beta_1\\), com base nos dados. As estimativas de \\(\\beta_0\\) e \\(\\beta_1\\) são obtidas a partir do comando coef. 10.1.2 Diagnóstico do ajuste da reta Ao realizar o diagnóstico de um ajuste linear clássico a partir dos gráficos dos resíduos, esperamos validar os pressupostos do modelo. Os resíduos devem aparentar ser aleatórios, sem padrões discerníveis, indicando homocedasticidade, e devem ser aproximadamente normalmente distribuídos em torno de zero, validando a suposição de normalidade e a independência dos erros, essencial para inferências subsequentes. Análise dos resíduos do ajuste plot( mod_reta, 1) # valores ajustados x resíduos library(car) qqPlot( residuals( mod_reta ) ) # gráfico quantil-quantil ## [1] 11 2 Neste caso, obsevamos que o gráfico quantil-quantil não apresenta desvios à normalidade. Porém, no gráfico dos resíduos em função dos valores ajustados, observa-se uma estrutura de variação dos dados não explicada pelo modelo. Os dados deveriam oscilar aleatoriamente em torno do zero, mas não é isso o que acontece. 10.1.3 Teste de falta de ajuste Nesta etapa, realizaremos o teste de falta de ajuste para averiguar se o modelo é suficiente para capturar o comportamento dos dados ou se um modelo mais flexível deveria ser utilizado. mod_quali &lt;- lm( pH ~ Tratamentos, data = dados) # ajuste do modelo qualitativo # Falta de ajuste anova( mod_reta, mod_quali ) ## Analysis of Variance Table ## ## Model 1: pH ~ Dose ## Model 2: pH ~ Tratamentos ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 10 2.085 ## 2 8 0.840 2 1.245 5.9286 0.02634 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pelo teste F, verifica-se que há falta de ajuste considerando-se o nível de 5% de significância. Conclui-se que o modelo não captura bem o comportamento dos dados 10.1.4 Ajuste do modelo de segundo grau Com a inserção do termo I(Dose, 2) na fórmula, a expressão da curva de tendência passa a ser \\[ pH = \\beta_0 + \\beta_1 \\times Dose + \\beta_2 \\times Dose^2 \\] ou seja, uma parábola. Observe que a curvatura exibida por uma parábola pode capturar o comportamento que não foi possível descrever com a reta. mod_quad &lt;- lm( pH ~ Dose + I(Dose^2), data = dados ) coef( mod_quad ) ## (Intercept) Dose I(Dose^2) ## 7.158333333 -0.049166667 -0.003083333 10.1.5 Diagnóstico do ajuste da parábola Análise dos resíduos do ajuste plot( mod_quad, 1) # valores ajustados x resíduos library(car) qqPlot( residuals( mod_quad ) ) # gráfico quantil-quantil ## [1] 6 11 shapiro.test( residuals( mod_quad ) ) ## ## Shapiro-Wilk normality test ## ## data: residuals(mod_quad) ## W = 0.89411, p-value = 0.1332 . 10.1.6 Teste de falta de ajuste para a parábola # Falta de ajuste anova( mod_quad, mod_quali ) ## Analysis of Variance Table ## ## Model 1: pH ~ Dose + I(Dose^2) ## Model 2: pH ~ Tratamentos ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 9 0.94417 ## 2 8 0.84000 1 0.10417 0.9921 0.3484  10.1.7 Comparação de modelos O Critério de Informação de Akaike (AIC) é fundamentado na teoria da informação, proporcionando uma medida relativa da informação perdida quando um determinado modelo é usado para representar o processo gerador dos dados. Ele avalia a adequação do modelo, considerando tanto a complexidade do modelo quanto o ajuste aos dados. O AIC é calculado como \\(AIC = 2k - 2\\ln(L)\\), onde \\(k\\) é o número de parâmetros no modelo, e \\(L\\) é a verossimilhança do modelo. Menores valores de AIC indicam um melhor equilíbrio entre ajuste do modelo e complexidade, permitindo comparar modelos diferentes, mesmo não aninhados, proporcionando uma abordagem robusta para a seleção de modelos na análise estatística. O coeficiente de determinação (R²), por outro lado, apenas mede a proporção da variância explicada pelo modelo, não penalizando a complexidade, podendo levar à preferência por modelos superajustados (overfitting) que performam mal com dados novos. Portanto, o AIC é frequentemente mais adequado para a seleção de modelos quando se compara um conjunto de modelos. AIC(mod_quali , mod_reta, mod_quad ) ## df AIC ## mod_quali 5 12.14340 ## mod_reta 3 19.05287 ## mod_quad 4 11.54621 Neste caso, observa-se que o modelo mais parcimonioso é o quadrático dentre os modelos estudados, pois possui menor perda da informação dos dados originais, além de baixa complexidade, resultando em um AIC inferior. "],["ajuste-linear-a-partir-da-ia.html", "11 Ajuste linear a partir da IA 11.1 Atividade Prática 1 11.2 Atividade Prática 2", " 11 Ajuste linear a partir da IA .chat-container { width: 100%; margin: 20px 0; font-family: 'Arial', sans-serif; } .code-block { background-color: #f0f0f0; border-radius: 5px; padding: 10px; font-family: 'Courier New', Courier, monospace; overflow-x: auto; white-space: nowrap; } .message { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; border-radius: 5px; background-color: #e6e6e6; } .bot-message { text-align: rigth; color: #333; } .user-message { text-align: right; color: #4caf50; } Nesta seção nós iremos explorar se ferramentas de inteligência artificial seriam capazes de orientar a análise de regressão e fornecer scripts úteis. No entanto, cuidado! Recomendamos que todas as saídas fornecidas por IA sejam avaliadas por profissionais competentes na área, que se responsabilizem pelos resultados. Além disso, dados sensíveis, pessoais ou institucionais, não devem ser fornecidos aos operadores de IA via prompts. 11.1 Atividade Prática 1 Construa um prompt para inteligência artificial com o objetivo de obter orientações estatísticas e um script pronto para a análise de regressão e seleção de modelos. Prompt Tarefa: selecionar o modelo que melhor representa a relação entre as variáveis Dose e pH no experimento a seguir; Contexto: os dados são referentes a um experimento inteiramente aleatorizado com 4 tratamentos e três replicações, cuja finalidade foi observar o efeito da dosagem de essência de limão no pH final de um produto lácteo; Detalhamento: faça uma comparação estatística entre modelos lineares, determinando qual é o mais parcimonioso; faça diagnóstico do ajuste e análise dos resíduos; verifique, para os modelos ajustados, se há falta de ajuste. Ferramentas: Linguagem R e funções do stats; Requisitos: apresente as hipóteses testadas, os testes de significância, os valores p e a interpretação estatística. Dados: copiar os dados da tabela e colar aqui! Resposta do chatGPT-4 Importar os Dados Primeiramente, você precisa importar os dados para o R. Você pode criar um data.frame diretamente. df &lt;- data.frame( Unidade = 1:12, Tratamentos = rep(LETTERS[1:4], each = 3), Dose = rep(c(0, 10, 20, 30), each = 3), pH = c(7.3, 6.8, 7.5, 6.5, 6.4, 5.8, 5.2, 4.9, 5.1, 3.2, 2.5, 2.9) ) Ajustar Modelos Lineares Vamos ajustar alguns modelos lineares e compará-los. Um modelo simples é a regressão linear simples, e outro é um modelo linear com termos polinomiais para considerar efeitos não-lineares da Dose no pH. # Modelo Linear Simples modelo_linear &lt;- lm(pH ~ Dose, data = df) # Modelo Linear Quadrático modelo_quadratico &lt;- lm(pH ~ poly(Dose, 2), data = df) Comparar Modelos Vamos comparar os modelos usando o teste de anova. anova(modelo_linear, modelo_quadratico) ## Analysis of Variance Table ## ## Model 1: pH ~ Dose ## Model 2: pH ~ poly(Dose, 2) ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 10 2.08500 ## 2 9 0.94417 1 1.1408 10.875 0.009264 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Diagnóstico do Modelo Vamos analisar os resíduos dos modelos ajustados. # Para o Modelo Linear plot(modelo_linear, 1) # Para o Modelo Quadrático plot(modelo_quadratico, 1) Testar a Falta de Ajuste Para testar a falta de ajuste de cada modelo, podemos comparar a variância dos resíduos de cada modelo. # Teste de Falta de Ajuste para Modelo Linear anova(modelo_linear) ## Analysis of Variance Table ## ## Response: pH ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Dose 1 30.104 30.1042 144.38 2.885e-07 *** ## Residuals 10 2.085 0.2085 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # Teste de Falta de Ajuste para Modelo Quadrático anova(modelo_quadratico) ## Analysis of Variance Table ## ## Response: pH ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## poly(Dose, 2) 2 31.2450 15.6225 148.92 1.268e-07 *** ## Residuals 9 0.9442 0.1049 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Interpretação Estatística Baseado nos p-valores e no diagnóstico dos resíduos, você pode determinar qual modelo é mais apropriado. O modelo com o menor p-valor e os resíduos bem distribuídos (sem padrões aparentes nos gráficos de diagnóstico) será considerado o melhor modelo. Se o p-valor for menor que o nível de significância (geralmente 0,05), você rejeitará a hipótese nula de que não há efeito da Dose no pH. Resumo dos Modelos Para obter os detalhes dos modelos ajustados, você pode usar a função summary. # Sumário do Modelo Linear summary(modelo_linear) ## ## Call: ## lm(formula = pH ~ Dose, data = df) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.71667 -0.26667 0.00833 0.37500 0.56667 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 7.46667 0.22057 33.85 1.20e-11 *** ## Dose -0.14167 0.01179 -12.02 2.89e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4566 on 10 degrees of freedom ## Multiple R-squared: 0.9352, Adjusted R-squared: 0.9287 ## F-statistic: 144.4 on 1 and 10 DF, p-value: 2.885e-07 # Sumário do Modelo Quadrático summary(modelo_quadratico) ## ## Call: ## lm(formula = pH ~ poly(Dose, 2), data = df) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.55833 -0.12083 0.09167 0.18333 0.34167 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.3417 0.0935 57.130 7.77e-13 *** ## poly(Dose, 2)1 -5.4867 0.3239 -16.940 3.91e-08 *** ## poly(Dose, 2)2 -1.0681 0.3239 -3.298 0.00926 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3239 on 9 degrees of freedom ## Multiple R-squared: 0.9707, Adjusted R-squared: 0.9642 ## F-statistic: 148.9 on 2 and 9 DF, p-value: 1.268e-07 Ao executar esses passos, você terá uma boa ideia de qual modelo melhor representa a relação entre Dose e pH para este conjunto de dados, considerando tanto a significância estatística quanto a adequação do modelo aos dados. 11.2 Atividade Prática 2 Construa um prompt para inteligência artificial com o objetivo de criar uma visualização do ajuste com alta qualidade. Prompt Tarefa: visualização do ajuste do modelo quadrático para a variável pH em função da dose; Contexto: os dados são referentes a um experimento inteiramente aleatorizado com quatro doses e três replicações, cuja finalidade foi observar o efeito da dosagem de essência de limão no pH final de um produto lácteo; Detalhamento: faça um gráfico do ajuste do modelo quadrático aos dados experimentais seguindo o estado da arte. O gráfico deve apresentar pontos experimentais, reta do ajuste e intervalo com 95% de confiança para os valores preditos da resposta. O gráfico deve ter rótulos adequados para o eixo x e y, além de cores que dêem destaque na visualização. Ferramentas: Linguagem R e pacote plotly; Dados: copiar os dados da tabela e colar aqui! Resposta do chatGPT-4 if(!requireNamespace(&quot;dplyr&quot;, quietly = TRUE)) install.packages(&quot;dplyr&quot;) if(!requireNamespace(&quot;plotly&quot;, quietly = TRUE)) install.packages(&quot;plotly&quot;) library(plotly) library(dplyr) # Calculando predições e intervalos de confiança predicoes &lt;- predict(mod_quad, newdata = dados, interval = &quot;prediction&quot;, level = 0.95) # Adicionando as predições e intervalos de confiança ao data frame dados &lt;- dados %&gt;% mutate( fitted = predicoes[,&quot;fit&quot;], lwr = predicoes[,&quot;lwr&quot;], upr = predicoes[,&quot;upr&quot;] ) # Gráfico com plotly plot_vis &lt;- plot_ly(dados) %&gt;% add_trace( x = ~Dose, y = ~pH, type = &#39;scatter&#39;, mode = &#39;markers&#39;, name = &#39;Dados Observados&#39;, marker = list(color = &#39;red&#39;, size = 10) ) %&gt;% add_trace( x = ~Dose, y = ~fitted, type = &#39;scatter&#39;, mode = &#39;lines&#39;, name = &#39;Ajuste Quadrático&#39;, line = list(color = &#39;blue&#39;) ) %&gt;% add_trace( x = ~Dose, y = ~lwr, type = &#39;scatter&#39;, mode = &#39;lines&#39;, name = &#39;Limite Inferior 95%&#39;, line = list(color = &#39;rgba(173,216,230,0.4)&#39;) ) %&gt;% add_trace( x = ~Dose, y = ~upr, type = &#39;scatter&#39;, mode = &#39;lines&#39;, name = &#39;Limite Superior 95%&#39;, fill = &#39;tonexty&#39;, line = list(color = &#39;rgba(173,216,230,0.4)&#39;) ) %&gt;% layout( title = &quot;Ajuste Quadrático do pH em função da Dose&quot;, xaxis = list(title = &quot;Dose (mg)&quot;), yaxis = list(title = &quot;pH&quot;) ) # Visualizar o gráfico plot_vis "],["comparações-entre-tratamentos.html", "12 Comparações entre tratamentos 12.1 Análise quantitativa 12.2 Análise qualitativa 12.3 Gráfico de médias", " 12 Comparações entre tratamentos .chat-container { width: 100%; margin: 20px 0; font-family: 'Arial', sans-serif; } .code-block { background-color: #f0f0f0; border-radius: 5px; padding: 10px; font-family: 'Courier New', Courier, monospace; overflow-x: auto; white-space: nowrap; } .message { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; border-radius: 5px; background-color: #e6e6e6; } .bot-message { text-align: rigth; color: #333; } .user-message { text-align: right; color: #4caf50; } Em experimentos com delineamentos usuais, tais como o inteiramente aleatorizado, as comparações múltiplas podem ser feitas a partir do pacote brasileiro ExpDes. O ExpDes apresenta uma função para cada tipo de delineamento experimental. Com ele, também é possível realizar a análise de experimentos com tratamentos em esquema fatorial de forma fácil e intuitiva. Porém, o pacote não comporta recursos para delineamentos mais específicos e para a análise de efeitos aleatórios. Nesta seção, usamos a função crd destinada à análise de Delineamentos Inteiramente Casualizados (Complete Randomized Desing). Nesse comando, a entrata treat designa o vetor de tratamentos, a entrada resp designa o vetor de respostas, quali indica se os tratamentos são qualitativos ou não, e os níveis de significância para os testes T e F são atrivuídos por sigT e sigF, respectivamente. 12.1 Análise quantitativa # Carregar o pacote expdes if(!requireNamespace(&quot;ExpDes&quot;, quietly = TRUE)) install.packages(&quot;ExpDes&quot;) library(ExpDes) # Realizando a análise com a função dic resultado_dic &lt;- crd(treat = dados$Dose, resp = dados$pH, quali = FALSE, sigT = 0.05, sigF = 0.05) ## ------------------------------------------------------------------------ ## Analysis of Variance Table ## ------------------------------------------------------------------------ ## DF SS MS Fc Pr&gt;Fc ## Treatament 3 31.349 10.450 99.521 1.1293e-06 ## Residuals 8 0.840 0.105 ## Total 11 32.189 ## ------------------------------------------------------------------------ ## CV = 6.07 % ## ## ------------------------------------------------------------------------ ## Shapiro-Wilk normality test ## p-value: 0.1224459 ## According to Shapiro-Wilk normality test at 5% of significance, residuals can be considered normal. ## ------------------------------------------------------------------------ ## ## ------------------------------------------------------------------------ ## Homogeneity of variances test ## p-value: 0.7162275 ## According to the test of bartlett at 5% of significance, residuals can be considered homocedastic. ## ------------------------------------------------------------------------ ## ## Adjustment of polynomial models of regression ## ------------------------------------------------------------------------ ## ## Linear Model ## =========================================== ## Estimate Standard.Error tc p.value ## ------------------------------------------- ## b0 7.4667 0.1565 47.7028 0 ## b1 -0.1417 0.0084 -16.9324 0 ## ------------------------------------------- ## ## R2 of linear model ## -------- ## 0.960286 ## -------- ## ## Analysis of Variance of linear model ## =============================================== ## DF SS MS Fc p.value ## ----------------------------------------------- ## Linear Effect 1 30.1042 30.1042 286.71 0 ## Lack of fit 2 1.2450 0.6225 5.93 0.02634 ## Residuals 8 0.8400 0.1050 ## ----------------------------------------------- ## ------------------------------------------------------------------------ ## ## Quadratic Model ## ========================================== ## Estimate Standard.Error tc p.value ## ------------------------------------------ ## b0 7.1583 0.1824 39.2569 0 ## b1 -0.0492 0.0293 -1.6790 0.1317 ## b2 -0.0031 0.0009 -3.2962 0.0109 ## ------------------------------------------ ## ## R2 of quadratic model ## -------- ## 0.996677 ## -------- ## ## Analysis of Variance of quadratic model ## ================================================== ## DF SS MS Fc p.value ## -------------------------------------------------- ## Linear Effect 1 30.1042 30.1042 286.71 0 ## Quadratic Effect 1 1.1408 1.1408 10.87 0.01092 ## Lack of fit 1 0.1042 0.1042 0.99 0.34841 ## Residuals 8 0.8400 0.1050 ## -------------------------------------------------- ## ------------------------------------------------------------------------ ## ## Cubic Model ## ========================================== ## Estimate Standard.Error tc p.value ## ------------------------------------------ ## b0 7.2000 0.1871 38.4856 0 ## b1 -0.1144 0.0718 -1.5943 0.1495 ## b2 0.0032 0.0063 0.4991 0.6311 ## b3 -0.0001 0.0001 -0.9960 0.3484 ## ------------------------------------------ ## ## R2 of cubic model ## - ## 1 ## - ## ## Analysis of Variance of cubic model ## ================================================== ## DF SS MS Fc p.value ## -------------------------------------------------- ## Linear Effect 1 30.1042 30.1042 286.71 0 ## Quadratic Effect 1 1.1408 1.1408 10.87 0.01092 ## Cubic Effect 1 0.1042 0.1042 0.99 0.34841 ## Lack of fit 0 0 0 0 1 ## Residuals 8 0.8400 0.1050 ## -------------------------------------------------- ## ------------------------------------------------------------------------ 12.2 Análise qualitativa mpcomp designa o método de comparação múltipla a ser usado # Realizando a análise com a função dic resultado_dic &lt;- crd(treat = dados$Dose, resp = dados$pH, quali = TRUE, mcomp = &quot;tukey&quot;, sigT = 0.05, sigF = 0.05) ## ------------------------------------------------------------------------ ## Analysis of Variance Table ## ------------------------------------------------------------------------ ## DF SS MS Fc Pr&gt;Fc ## Treatament 3 31.349 10.450 99.521 1.1293e-06 ## Residuals 8 0.840 0.105 ## Total 11 32.189 ## ------------------------------------------------------------------------ ## CV = 6.07 % ## ## ------------------------------------------------------------------------ ## Shapiro-Wilk normality test ## p-value: 0.1224459 ## According to Shapiro-Wilk normality test at 5% of significance, residuals can be considered normal. ## ------------------------------------------------------------------------ ## ## ------------------------------------------------------------------------ ## Homogeneity of variances test ## p-value: 0.7162275 ## According to the test of bartlett at 5% of significance, residuals can be considered homocedastic. ## ------------------------------------------------------------------------ ## ## Tukey&#39;s test ## ------------------------------------------------------------------------ ## Groups Treatments Means ## a 0 7.2 ## b 10 6.233333 ## c 20 5.066667 ## d 30 2.866667 ## ------------------------------------------------------------------------ 12.3 Gráfico de médias 12.3.1 Cálculo das margens de erro Para o cálculo da margem de erro das médias, devemos considerar: O erro quadrático médio do resíduo (EQMR) \\[ EQMR = \\frac{\\sum_{i =1}^n (y_i - \\hat{y}_i)^2}{df_{res}} \\] O erro padrão da média (SE) \\[ SE = \\sqrt{\\frac{EQMR}{r}} \\] A margem de erro \\[ erro = t_{(1 - \\alpha/2; \\, df)} \\, \\sqrt{\\frac{EQMR}{r}} = t_{\\alpha/2; \\, df} \\, SE \\] em que: \\(y_i\\) e \\(\\hat{y}_i\\) são os valores observados e preditos da resposta; \\(df_{res}\\) é o número de graus de liberdade para os resíduos da análise; \\(r\\) é o número de réplicas por tratamentos; \\(t_{(1-\\alpha/2; \\, df)}\\) é o quantil da distribuição \\(t\\) considerando-se o nível de significância \\(\\alpha\\) e \\(df\\) graus de liberdade. (EQMR &lt;- sum( residuals(mod_quali)^2 )/8 ) ## [1] 0.105 (SE &lt;- sqrt( EQMR / 3 )) ## [1] 0.1870829 (ERRO &lt;- qt(0.975, 8)*SE) ## [1] 0.4314139 Dessa forma, a margem de erro a se considerar para a estimativa das médias de tratamentos é de \\(0,431\\) unidades, isso com 95% de confiança. 12.3.2 Prompt para a confecção do gráfico Prompt Tarefa: Elabore um gráfico de médias para comparar o pH de um produto sujeito a quatro tratamentos (dosagens) Contexto: os dados são referentes a um experimento inteiramente aleatorizado com quatro doses e três replicações, cuja finalidade foi observar o efeito da dosagem de essência de limão no pH final de um produto lácteo; Detalhamento: Faça um gráfico de médias, com barras representando as margens de erro. Use cores diferentes e apresente as letras comparativas do teste. Crie rótulos intuitivos para os eixos. As letras do teste (grupos) devem aparecer acima das colunas que representam cada tratamento. Ferramentas: Linguagem R e pacote ggplot2 ; Dados: A margem de erro para as médias é de 0.187. A tabela do teste de Tukey é apresentada a seguir: Tukeys Test Groups Treatments Means a 0 7.2 b 10 6.233333 c 20 5.066667 d 30 2.866667 12.3.3 Resposta do chatGPT-4 Resposta # Carregar o pacote ggplot2 library(ggplot2) # Criar o dataframe com os dados do teste de Tukey dados &lt;- data.frame( Tratamento = factor(c(&#39;0 ml&#39;, &#39;10 ml&#39;, &#39;20 ml&#39;, &#39;30 ml&#39;), levels = c(&#39;0 ml&#39;, &#39;10 ml&#39;, &#39;20 ml&#39;, &#39;30 ml&#39;)), Médias = c(7.2, 6.233333, 5.066667, 2.866667), MargemErro = c(0.187, 0.187, 0.187, 0.187), Grupo = c(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;) ) # Criar o gráfico de médias com barras de erro p &lt;- ggplot(dados, aes(x = Tratamento, y = Médias, fill = Tratamento)) + geom_bar(stat = &quot;identity&quot;, position = position_dodge(), width = 0.6) + geom_errorbar(aes(ymin = Médias - MargemErro, ymax = Médias + MargemErro), width = 0.2, position = position_dodge(0.6)) + geom_text(aes(label=Grupo, y=Médias + MargemErro), vjust=-0.5) + scale_fill_manual(values = c(&#39;0 ml&#39; = &#39;red&#39;, &#39;10 ml&#39; = &#39;blue&#39;, &#39;20 ml&#39; = &#39;green&#39;, &#39;30 ml&#39; = &#39;purple&#39;)) + labs( title = &quot;Efeito da Dosagem de Essência de Limão no pH&quot;, x = &quot;Dosagem de Essência de Limão&quot;, y = &quot;pH Médio&quot; ) + theme_minimal() print(p) "],["aleatorização-de-experimentos.html", "13 Aleatorização de experimentos 13.1 Experimento Completamente Aleatorizado 13.2 Experimento Aleatorizado em Blocos", " 13 Aleatorização de experimentos .chat-container { width: 100%; margin: 20px 0; font-family: 'Arial', sans-serif; } .code-block { background-color: #f0f0f0; border-radius: 5px; padding: 10px; font-family: 'Courier New', Courier, monospace; overflow-x: auto; white-space: nowrap; } .message { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; border-radius: 5px; background-color: #e6e6e6; } .bot-message { text-align: rigth; color: #333; } .user-message { text-align: right; color: #4caf50; } 13.1 Experimento Completamente Aleatorizado Aleatorize um experimento com três tratamentos (T1, T2 e T3) e cinco réplicas considerando um planejamento inteiramente casualizado. 13.1.1 Código # Carregando a biblioteca agricolae library(agricolae) # Definir número de replicações e tratamentos rep &lt;- 5 tratamentos &lt;- c(&quot;T1&quot;, &quot;T2&quot;, &quot;T3&quot;) # Criar o design experimental completamente aleatorizado design &lt;- design.crd(tratamentos, r = rep, seed = 42) 13.1.2 Resultado # Visualizar o plano experimental print(design$book) ## plots r tratamentos ## 1 101 1 T3 ## 2 102 1 T1 ## 3 103 2 T3 ## 4 104 3 T3 ## 5 105 1 T2 ## 6 106 2 T2 ## 7 107 2 T1 ## 8 108 3 T2 ## 9 109 3 T1 ## 10 110 4 T2 ## 11 111 4 T1 ## 12 112 4 T3 ## 13 113 5 T3 ## 14 114 5 T2 ## 15 115 5 T1 13.2 Experimento Aleatorizado em Blocos Aleatorize um experimento com três tratamentos (T1, T2 e T3) e seis réplicas considerando um delineamento casualizado em blocos. 13.2.1 Código # Carregando a biblioteca agricolae library(agricolae) # Definir número de replicações e tratamentos rep &lt;- 6 tratamentos &lt;- c(&quot;T1&quot;, &quot;T2&quot;, &quot;T3&quot;) # Criar o design experimental completamente aleatorizado design &lt;- design.rcbd(tratamentos, r = rep) 13.2.2 Resultado # Visualizar o plano experimental print(design$book) ## plots block tratamentos ## 1 101 1 T1 ## 2 102 1 T2 ## 3 103 1 T3 ## 4 201 2 T3 ## 5 202 2 T2 ## 6 203 2 T1 ## 7 301 3 T2 ## 8 302 3 T1 ## 9 303 3 T3 ## 10 401 4 T2 ## 11 402 4 T1 ## 12 403 4 T3 ## 13 501 5 T3 ## 14 502 5 T1 ## 15 503 5 T2 ## 16 601 6 T3 ## 17 602 6 T1 ## 18 603 6 T2 "],["determinação-de-crescimento-microbiano.html", "14 Determinação de crescimento microbiano 14.1 O modelo de crescimento 14.2 Exemplo de aplicação 14.3 Exercício 1 14.4 Exercício 2", " 14 Determinação de crescimento microbiano .chat-container { width: 100%; margin: 20px 0; font-family: 'Arial', sans-serif; } .code-block { background-color: #f0f0f0; border-radius: 5px; padding: 10px; font-family: 'Courier New', Courier, monospace; overflow-x: auto; white-space: nowrap; } .message { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; border-radius: 5px; background-color: #e6e6e6; } .bot-message { text-align: rigth; color: #333; } .user-message { text-align: right; color: #4caf50; } 14.1 O modelo de crescimento O modelo de crescimento exponencial que representa a taxa de variação da biomassa em relação ao tempo (\\(t\\), em \\(h\\)) pode ser expresso, matematicamente, pelo produto da taxa específica de crescimento de microrganismos (\\(\\mu\\), em \\(h^{-1}\\)) pela concentração de biomassa (\\(x\\), em \\(kg.m^{-3}\\)) no reator: \\[ \\frac{dx}{dt} = \\mu \\, x \\] Como \\((1/x) \\, dx = \\mu \\, dt\\), tem-se que \\[ \\int_{x_a}^{x_b} \\frac{1}{x} dx = \\int_{t_a}^{t_b} \\mu \\, dt \\] E, desse modo, \\[ \\ln(x_b) - \\ln(x_a) = \\mu \\int_{t_a}^{t_b} dt \\] Portanto, o valor de \\(\\mu\\) é determinado pela expressão \\[ \\mu = \\frac{ \\ln(x_b/x_a) }{ t_b - t_a} \\] 14.2 Exemplo de aplicação E. coli foi utilizada para produzir o hormônio do crescimento porcino recombinante. A bactéria cresce aerobicamente em batelada, com glicose como substrato limitante do crescimento. As concentrações de células e de substrato foram medidas em função do tempo de cultivo, com os resultados ao lado. Fonte: Bioprocess Engineering Principles, Pauline Doran, 2nd Edition Tabela 1 - Concentração de células em função do tempo. Tempo (h) Concentração de células, x (kg/m³) 0 0.2 0.33 0.21 0.5 0.22 0.75 0.32 1 0.47 1.5 1 2 2.1 2.5 4.42 2.8 6.9 3 9.4 3.1 10.9 3.2 11.6 3.5 11.7 3.7 11.6 14.3 Exercício 1 Determine o valor do \\(\\mu_{max}\\) utilizando planilhas eletrônicas e o programa R. Resposta - com todos os dados #Dados experimentais da biomassa em função do tempo tempo &lt;- c(0, 0.33, 0.5, 0.75, 1, 1.5, 2., 2.5, 2.8, 3, 3.1, 3.2, 3.5, 3.7) #horas biomassa &lt;- c(0.2, 0.21, 0.22, 0.32, 0.47, 1, 2.1, 4.42, 6.9, 9.4, 10.9, 11.6, 11.7, 11.6) #kg/m³ # Aplicar logaritmo natural aos dados de biomassa ln_biomassa &lt;- log(biomassa) # Ajuste linear ajuste_linear &lt;- lm(ln_biomassa ~ tempo) # Extrair o coeficiente angular da reta (que representa mu_max) coeficientes &lt;- coef(ajuste_linear) mu_max &lt;- coeficientes[2] # Exibir o valor de mu_max cat(&quot;O valor de mu_max é:&quot;, mu_max, &quot;h^-1\\n&quot;) ## O valor de mu_max é: 1.314963 h^-1 # Estimativas de mu por diferenças finitas de primeira ordem plot(tempo[-1], diff(ln_biomassa)/diff(tempo), ylab = &quot;Mu estimado&quot;, xlab = &quot;Tempo (h)&quot;, cex.lab = 1.3, pch =19) Resposta - dados filtrados #Dados experimentais da biomassa em função do tempo tempo &lt;- c(0.75, 1, 1.5, 2., 2.5, 2.8, 3, 3.1) #horas biomassa &lt;- c(0.32, 0.47, 1, 2.1, 4.42, 6.9, 9.4, 10.9) #kg/m³ # Aplicar logaritmo natural aos dados de biomassa ln_biomassa &lt;- log(biomassa) # Ajuste linear ajuste_linear &lt;- lm(ln_biomassa ~ tempo) # Extrair o coeficiente angular da reta (que representa mu_max) coeficientes &lt;- coef(ajuste_linear) mu_max &lt;- coeficientes[2] # Exibir o valor de mu_max cat(&quot;O valor de mu_max é:&quot;, mu_max, &quot;h^-1\\n&quot;) ## O valor de mu_max é: 1.49765 h^-1 14.4 Exercício 2 Use a inteligência artifical para linearizar os dados e calcular o \\(\\mu_{max}\\). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
